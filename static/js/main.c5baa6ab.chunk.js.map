{"version":3,"sources":["bart.png","vero.jpeg","components/profile/profile.js","components/profile/ProfilePage.js","components/button/ButtonWithProps.js","components/button/ButtonWithChild.js","components/button/CreativeElement.js","components/button/ButtonPage.js","components/theme/ThemePage.js","components/form/Form.js","components/cities/Cities.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Profile","this","props","profileInfo","image","name","age","hobbies","family","style","border","padding","textAlign","src","className","alt","map","hobbie","index","key","member","React","Component","ProfilePage","profiles","logo","vero","profile","ButtonWithProps","handleClick","event","informButtonPage","buttonText","onClick","customStyle","ButtonWithChild","children","CreativeComponent","handleChange","onMouseMove","ButtonPage","handleButtonClicks","text","console","log","handleButtonChange","backgroundColor","onColorChange","state","color","localStorage","setItem","history","push","onChange","setState","target","value","type","Form","id","onSubmit","onFormSubmit","firstName","lastName","placeholder","Cities","cities","loading","fetch","then","res","json","position","left","top","sizeUnit","size","data","columns","Header","accessor","App","handleColorChange","handleHomepageMessage","localColor","getItem","to","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c5baa6ab.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bart.c04735e9.png\";","module.exports = __webpack_public_path__ + \"static/media/vero.8af1f2ee.jpeg\";","import React from \"react\";\n\n// class Profile {}\n\nclass Profile extends React.Component {\n  render() {\n    const { image, name, age, hobbies, family } = this.props.profileInfo;\n\n    return (\n      <div>\n        {\" \"}\n        <div\n          style={{\n            border: \"2px solid purple\",\n            padding: \"20px\",\n            textAlign: \"center\"\n          }}\n        >\n          <img src={image} className=\"App-logo\" alt=\"logo\" />\n          <div>Hello, my name is {name}</div>\n          <div>I am {age} years old boy!</div>\n          <div>\n            I like{\" \"}\n            {hobbies.map((hobbie, index) => {\n              return <p key={\"hobby\" + index}>{hobbie}</p>;\n            })}\n          </div>\n          <div>\n            My family:{\" \"}\n            {family.map((member, index) => {\n              return <p key={\"family\" + index}> {member}</p>;\n            })}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Profile;\n","import React from \"react\";\nimport logo from \"../../bart.png\";\nimport vero from \"../../vero.jpeg\";\nimport Profile from \"./profile\";\n\nexport default class ProfilePage extends React.Component {\n  render() {\n    const hobbies = [\"sleeping\", \"netflix\", \"eating\"];\n    const family = [\"Lisa\", \"Hommer\", \"Megie\", \"Marge\"];\n\n    const profiles = [\n      {\n        name: \"Bart Simpson\",\n        age: 11,\n        image: logo,\n        hobbies: hobbies,\n        family: family\n      },\n      {\n        name: \"Vero\",\n        age: 22,\n        image: vero,\n        hobbies: hobbies,\n        family: family\n      }\n    ];\n    return (\n      <div className=\"App-header\">\n        {profiles.map((profile, index) => {\n          return <Profile key={index} profileInfo={profile} />;\n        })}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport \"../../App.css\";\n\nexport default class ButtonWithProps extends React.Component {\n  handleClick = event => {\n    this.props.informButtonPage(\"Button was clicked\");\n  };\n  render() {\n    const { buttonText } = this.props;\n    return (\n      <button\n        onClick={this.handleClick}\n        className=\"button\"\n        style={this.props.customStyle}\n      >\n        {buttonText ? buttonText : \"Submit\"}\n      </button>\n    );\n  }\n}\n","import React from \"react\";\nimport \"../../App.css\";\n\nexport default class ButtonWithChild extends React.Component {\n  render() {\n    const { children } = this.props;\n    return <button className=\"button\">{this.props.children}</button>;\n  }\n}\n","import React from \"react\";\nimport \"../../App.css\";\n\nexport default class CreativeComponent extends React.Component {\n  handleChange = event => {\n    this.props.handleChange(\"Button was changed\");\n  };\n  render() {\n    const { children } = this.props;\n\n    return (\n      <div>\n        <button className=\"button\" onMouseMove={this.handleChange}>\n          {children}\n        </button>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ButtonWithProps from \"./ButtonWithProps\";\nimport ButtonWithChild from \"./ButtonWithChild\";\nimport CreativeComponent from \"./CreativeElement\";\n\nexport default class ButtonPage extends React.Component {\n  handleButtonClicks = text => {\n    console.log(text);\n  };\n  handleButtonChange = event => {\n    console.log(event);\n  };\n  render() {\n    return (\n      <div>\n        <p> This is button</p>\n\n        <ButtonWithProps\n          buttonText={\"Click me!\"}\n          customStyle={{ backgroundColor: \"lightblue\" }}\n          informButtonPage={this.handleButtonClicks}\n        />\n        <ButtonWithProps customStyle={{ backgroundColor: \"lightgreen\" }} />\n        <ButtonWithProps\n          buttonText={\"Click\"}\n          customStyle={{ backgroundColor: \"yellow\" }}\n        />\n        <ButtonWithChild> Heeelllooo </ButtonWithChild>\n        <CreativeComponent handleChange={this.handleButtonChange}>\n          <div> Woop woop! </div>\n        </CreativeComponent>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ButtonWithProps from \"../button/ButtonWithProps\";\n\n\nexport default class ButtonPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      color: \"pink\"\n    };\n  }\n\n  handleChange = event => {\n    this.props.onColorChange(this.state.color);\n    localStorage.setItem('color', this.state.color);\n    this.props.history.push(\"/\")\n\n  };\n\n  render() {\n    const { onColorChange } = this.props;\n    return (\n      <div>\n        <p> This is theme page</p>\n        <input onChange={event => this.setState({ color: event.target.value })} type=\"color\" />\n        <ButtonWithProps informButtonPage={this.handleChange} />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ButtonWithProps from \"../button/ButtonWithProps\"\n\n\nexport default class Form extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            firstName: \"\",\n            lastName: \"\"\n        }\n    }\n    handleChange = (event) => {\n        this.setState({ [event.target.id]: event.target.value })\n        console.log(this.state)\n\n    }\n    onSubmit = () => {\n        this.props.onFormSubmit({ firstName: this.state.firstName, lastName: this.state.lastName })\n        this.props.history.push(\"/\")\n\n    }\n    render() {\n        const { firstName, lastName } = this.state;\n        return (\n            < div >\n                <input id=\"firstName\" placeholder=\"First name\" onChange={this.handleChange} value={firstName} />\n                <input id=\"lastName\" placeholder=\"Last name\" onChange={this.handleChange} value={lastName} />\n                <ButtonWithProps informButtonPage={this.onSubmit} />\n            </div>)\n            ;\n    }\n}","import React from 'react';\nimport ReactTable from 'react-table';\nimport 'react-table/react-table.css';\nimport CircleLoader from 'react-spinners/RingLoader';\n\nexport default class Cities extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            cities: [],\n            loading: true\n        }\n    }\n    componentDidMount() {\n        const cities = fetch('https://indian-cities-api-nocbegfhqg.now.sh/cities')\n            .then(res => res.json())\n            .then(cities => this.setState({ cities, loading: false }))\n\n    }\n    render() {\n        console.log(this.state.cities)\n        const { cities } = this.state\n        return (\n            <>\n\n                <div className='sweet-loading' style={{ position: \"absolute\", left: \"40%\", top: \"20%\" }}>\n                    <CircleLoader\n\n                        sizeUnit={\"px\"}\n                        size={150}\n                        color={'white'}\n                        loading={this.state.loading}\n                    />\n                </div>\n                <ReactTable data={cities} columns={[\n                    {\n                        Header: 'City',\n                        accessor: 'City'\n                    },\n                    {\n                        Header: 'State',\n                        accessor: 'State'\n                    },\n                    {\n                        Header: 'District',\n                        accessor: 'District'\n                    }\n                ]} />\n            </>\n        )\n    }\n}","import React from \"react\";\n\nimport \"./App.css\";\nimport ProfilePage from \"./components/profile/ProfilePage\";\nimport ButtonPage from \"./components/button/ButtonPage\";\nimport ThemePage from \"./components/theme/ThemePage\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport Form from \"./components/form/Form\";\nimport Cities from \"./components/cities/Cities\";\nimport { WiDayCloudyWindy } from 'react-icons/wi';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      backgroundColor: \"\",\n      firstName: \"\",\n      lastName: \"\"\n    };\n  }\n  componentDidMount() {\n    //guaranteed that this get called when app is render for the first time\n    const localColor = localStorage.getItem('color');\n    this.setState({ backgroundColor: localColor })\n  }\n\n  handleColorChange = (color) => {\n    this.setState({ backgroundColor: color })\n  }\n  handleHomepageMessage = ({ firstName, lastName }) => {\n    this.setState({ firstName, lastName })\n\n  }\n  render() {\n    return (\n      <Router>\n        <div\n          className=\"entire-app\"\n          style={{ backgroundColor: this.state.backgroundColor }}\n          onClick={() => this.props.handleColorChange}\n        >\n          <nav>\n            <div>\n              <Link to=\"/\">Home</Link>\n            </div>\n            <div>\n              <Link to=\"/profile\">Profile</Link>\n            </div>\n            <div>\n              <Link to=\"/buttons\">Buttons</Link>\n            </div>\n            <div>\n              <Link to=\"/theme\">Theme</Link>\n            </div>\n            <div>\n              <Link to=\"/form\">Form</Link>\n            </div>\n            <div>\n              <Link to=\"/cities\">Cities</Link>\n            </div>\n          </nav>\n\n          {/* A <Switch> looks through its children <Route>s and\n          renders the first one that matches the current URL. */}\n          <Switch>\n            <Route exact path=\"/\">\n              <div>{(this.state.firstName === \"\" && this.state.lastName === \"\") ? \"Hellloo stranger\" : \"Welcome back \" + this.state.firstName + \" \" + this.state.lastName}</div>\n              <div><WiDayCloudyWindy className=\"icons\" /></div>\n            </Route>\n            <Route exact path=\"/profile\" component={ProfilePage} />\n            <Route exact path=\"/buttons\" component={ButtonPage} />\n            <Route exact path=\"/theme\" component={(props) => <ThemePage {...props} onColorChange={this.handleColorChange} />} />\n            <Route exact path=\"/form\" component={(props) => <Form {...props} onFormSubmit={this.handleHomepageMessage} />} />\n            <Route exact path=\"/cities\" component={Cities} />\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}