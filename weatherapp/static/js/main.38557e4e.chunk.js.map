{"version":3,"sources":["icons sync /^/.//.*/.svg$","icons/01d.svg","icons/01n.svg","icons/02d.svg","icons/02n.svg","icons/03d.svg","icons/03n.svg","icons/04d.svg","icons/04n.svg","icons/09d.svg","icons/09n.svg","icons/10d.svg","icons/10n.svg","icons/11d.svg","icons/11n.svg","icons/50d.svg","icons/50n.svg","history.js","components/ChoosePlace.js","components/Weather.js","App.js","serviceWorker.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","createBrowserHistory","ChoosePlace","props","onSubmit","a","loadWeather","history","push","className","name","type","placeholder","Weather","sunrise","Date","this","weather","sunset","currentWeather","list","city","country","format","dt_txt","src","require","icon","alt","Math","round","main","temp","description","temp_max","temp_min","wind","speed","rain","toFixed","fromUnixTime","toLocaleTimeString","timeStyle","filter","i","index","todaysWeather","key","dt","weatherByHourItem","React","Component","App","getWeather","preventDefault","target","elements","value","fetch","json","res","setState","state","localColor","localStorage","getItem","setItem","document","body","classList","add","console","log","to","onChange","nextTheme","toggle","htmlFor","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.38557e4e.chunk.js","sourcesContent":["var map = {\n\t\"./01d.svg\": 36,\n\t\"./01n.svg\": 37,\n\t\"./02d.svg\": 38,\n\t\"./02n.svg\": 39,\n\t\"./03d.svg\": 40,\n\t\"./03n.svg\": 41,\n\t\"./04d.svg\": 42,\n\t\"./04n.svg\": 43,\n\t\"./09d.svg\": 44,\n\t\"./09n.svg\": 45,\n\t\"./10d.svg\": 46,\n\t\"./10n.svg\": 47,\n\t\"./11d.svg\": 48,\n\t\"./11n.svg\": 49,\n\t\"./50d.svg\": 50,\n\t\"./50n.svg\": 51\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 18;","module.exports = __webpack_public_path__ + \"static/media/01d.249e4516.svg\";","module.exports = __webpack_public_path__ + \"static/media/01n.69386661.svg\";","module.exports = __webpack_public_path__ + \"static/media/02d.c09ed901.svg\";","module.exports = __webpack_public_path__ + \"static/media/02n.bc71024e.svg\";","module.exports = __webpack_public_path__ + \"static/media/03d.63ba004f.svg\";","module.exports = __webpack_public_path__ + \"static/media/03n.63ba004f.svg\";","module.exports = __webpack_public_path__ + \"static/media/04d.c2d7acbc.svg\";","module.exports = __webpack_public_path__ + \"static/media/04n.8c6b94de.svg\";","module.exports = __webpack_public_path__ + \"static/media/09d.ac93e407.svg\";","module.exports = __webpack_public_path__ + \"static/media/09n.f9878969.svg\";","module.exports = __webpack_public_path__ + \"static/media/10d.e481c169.svg\";","module.exports = __webpack_public_path__ + \"static/media/10n.fdb6e4ff.svg\";","module.exports = __webpack_public_path__ + \"static/media/11d.95dfac8e.svg\";","module.exports = __webpack_public_path__ + \"static/media/11n.9f879562.svg\";","module.exports = __webpack_public_path__ + \"static/media/50d.26b37a26.svg\";","module.exports = __webpack_public_path__ + \"static/media/50n.8eaa262b.svg\";","import { createBrowserHistory } from \"history\";\n\nexport default createBrowserHistory();\n","import React from \"react\";\nimport \"./Weather.css\";\nimport history from \"../history\";\n\nconst ChoosePlace = props => {\n  return (\n    <form\n      onSubmit={async e => {\n        await props.loadWeather(e);\n\n        history.push(\"/weather\");\n      }}\n    >\n      <input\n        className=\"form-input\"\n        name=\"city\"\n        type=\"text\"\n        placeholder=\"City...\"\n      />\n      <input\n        className=\"form-input\"\n        name=\"country\"\n        type=\"text\"\n        placeholder=\"Country...\"\n      />\n      <button className=\"submit\" type=\"submit\">\n        Get weather\n      </button>\n    </form>\n  );\n};\nexport default ChoosePlace;\n","import React from \"react\";\nimport \"./Weather.css\";\nimport { format, fromUnixTime } from \"date-fns\";\n\nexport default class Weather extends React.Component {\n  render() {\n    const sunrise = new Date(this.props.weather.sunrise);\n    const sunset = new Date(this.props.weather.sunset);\n    const currentWeather = this.props.weather.list[0];\n\n    return (\n      <main className=\"main-container\">\n        <div className=\"location-and-date\">\n          <h1 className=\"location-and-date__location\">\n            <span>{this.props.weather.city}</span>,{\" \"}\n            <span>{this.props.weather.country}</span>{\" \"}\n          </h1>\n          <div>\n            {currentWeather &&\n              format(new Date(currentWeather.dt_txt), \"yyyy-MM-dd\")}\n          </div>\n        </div>\n\n        <div className=\"current-temperature\">\n          <div className=\"current-temperature__icon-container\">\n            {currentWeather && (\n              <img\n                className=\"weatherIcon\"\n                id=\"currentWeatherIcon\"\n                src={require(\"../icons/\" +\n                  currentWeather.weather[0].icon +\n                  \".svg\")}\n                alt=\"icon\"\n              />\n            )}\n          </div>\n          <div className=\"current-temperature__content-container\">\n            <div className=\"current-temperature__value\">\n              {Math.round(currentWeather && currentWeather.main.temp)}&deg;\n            </div>\n            <div className=\"current-temperature__summary\">\n              {currentWeather && currentWeather.weather[0].description}\n            </div>\n          </div>\n        </div>\n\n        <div className=\"current-stats\">\n          <div>\n            <div className=\"current-stats__value\">\n              {currentWeather && Math.round(currentWeather.main.temp_max)}&deg;\n            </div>\n            <div className=\"current-stats__label\">High</div>\n            <div className=\"current-stats__value\">\n              {currentWeather && Math.round(currentWeather.main.temp_min)}&deg;\n            </div>\n            <div className=\"current-stats__label\">Low</div>\n          </div>\n          <div>\n            <div className=\"current-stats__value\">\n              {currentWeather && Math.round(currentWeather.wind.speed)}mph\n            </div>\n            <div className=\"current-stats__label\">Wind</div>\n\n            <div className=\"current-stats__value\">\n              {\" \"}\n              {currentWeather && currentWeather.rain\n                ? currentWeather.rain[\"3h\"].toFixed(1) + \" mm\"\n                : \"0 mm\"}\n            </div>\n            <div className=\"current-stats__label\">Rain</div>\n          </div>\n          <div>\n            <div className=\"current-stats__value\">\n              {fromUnixTime(sunrise).toLocaleTimeString([], {\n                timeStyle: \"short\"\n              })}\n            </div>\n            <div className=\"current-stats__label\">Sunrise</div>\n            <div className=\"current-stats__value\">\n              {fromUnixTime(sunset).toLocaleTimeString([], {\n                timeStyle: \"short\"\n              })}\n            </div>\n            <div className=\"current-stats__label\">Sunset</div>\n          </div>\n        </div>\n\n        <div className=\"weather-by-hour\">\n          <h2 className=\"weather-by-hour__heading\"> 1 day's weather</h2>\n          <div className=\"weather-by-hour__container\">\n            {this.props.weather.list\n              .filter((i, index) => index < 8)\n              .map((todaysWeather, index) => {\n                return (\n                  <div\n                    key={\"todaysWeather\" + index}\n                    className=\"weather-by-hour__item\"\n                  >\n                    <div className=\"weather-by-hour__hour\">\n                      {fromUnixTime(todaysWeather.dt).toLocaleTimeString([], {\n                        timeStyle: \"short\"\n                      })}{\" \"}\n                    </div>\n\n                    <div>\n                      <img\n                        className=\"weatherIcon\"\n                        src={require(\"../icons/\" +\n                          todaysWeather.weather[0].icon +\n                          \".svg\")}\n                        alt=\"icon\"\n                      />\n                    </div>\n\n                    <div>{Math.round(todaysWeather.main.temp)}&deg;</div>\n                  </div>\n                );\n              })}\n          </div>\n        </div>\n\n        <div className=\"next-5-days\">\n          <h2 className=\"next-5-days__heading\">Next 5 days</h2>\n          <div className=\"next-5-days__container\">\n            {this.props.weather.list.map((weatherByHourItem, index) => {\n              return (\n                <div key={\"weatherByHour\" + index} className=\"next-5-days__row\">\n                  <div className=\"next-5-days__date\">\n                    {format(new Date(weatherByHourItem.dt_txt), \"iii\")}\n                    <div className=\"next-5-days__label\">\n                      {format(new Date(weatherByHourItem.dt_txt), \"dd/MM\")}\n                    </div>\n                  </div>\n\n                  <div className=\"next-5-days__low\">\n                    {Math.round(weatherByHourItem.main.temp_min)}&deg;\n                    <div className=\"next-5-days__label\">Low</div>\n                  </div>\n\n                  <div className=\"next-5-days__high\">\n                    {Math.round(weatherByHourItem.main.temp_max)}&deg;\n                    <div className=\"next-5-days__label\">High</div>\n                  </div>\n\n                  <div className=\"next-5-days__icon\">\n                    <img\n                      className=\"weatherIcon\"\n                      src={require(\"../icons/\" +\n                        weatherByHourItem.weather[0].icon +\n                        \".svg\")}\n                      alt=\"icon\"\n                    />\n                  </div>\n\n                  <div className=\"next-5-days__rain\">\n                    {weatherByHourItem.rain && weatherByHourItem.rain[\"3h\"]\n                      ? weatherByHourItem.rain[\"3h\"].toFixed(1) + \" mm\"\n                      : \"0 mm\"}\n                    <div className=\"next-5-days__label\">Rain</div>\n                  </div>\n\n                  <div className=\"next-5-days__wind\">\n                    {Math.round(weatherByHourItem.wind.speed)}mph\n                    <div className=\"next-5-days__label\">Wind</div>\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n        </div>\n      </main>\n    );\n  }\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport ChoosePlace from \"./components/ChoosePlace\";\nimport Weather from \"./components/Weather\";\nimport { Router, Switch, Route, Link } from \"react-router-dom\";\nimport history from \"./history\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      city: \"\",\n      country: \"\",\n      sunrise: 0,\n      sunset: 0,\n      list: []\n    };\n  }\n  componentDidMount() {\n    //guaranteed that this get called when app is render for the first time\n    const localColor = localStorage.getItem(\"theme\");\n\n    if (localStorage.getItem(\"theme\") === null) {\n      localStorage.setItem(\"theme\", \"dark\");\n      document.body.classList.add(\"dark\");\n    } else {\n      localStorage.setItem(\"theme\", localColor);\n      document.body.classList.add(localColor);\n    }\n  }\n\n  getWeather = async e => {\n    e.preventDefault();\n    const city = e.target.elements.city.value;\n\n    const country = e.target.elements.country.value;\n    const req = await fetch(\n      `http://api.openweathermap.org/data/2.5/forecast?q=${city},${country}&appid=9ec023e8ee32ce8d12a5d6ac6468f69b&units=metric`\n    );\n    const res = await req.json();\n\n    await this.setState({\n      city: res.city.name,\n      country: res.city.country,\n      sunrise: res.city.sunrise,\n      sunset: res.city.sunset,\n      list: res.list\n    });\n  };\n\n  render() {\n    console.log(this.state);\n\n    return (\n      <div className=\"App\">\n        <Router history={history}>\n          <div>\n            <nav>\n              <div className=\"linksNav\">\n                <div>\n                  <Link to=\"/\"> Home </Link>{\" \"}\n                </div>\n                {this.state.city !== \"\" && (\n                  <div>\n                    <Link to=\"/weather\"> Weather </Link>\n                  </div>\n                )}\n              </div>\n              <div className=\"theme-toggle\" id=\"switchButton\">\n                <input\n                  id=\"theme\"\n                  type=\"checkbox\"\n                  onChange={() => {\n                    const nextTheme =\n                      localStorage.getItem(\"theme\") === \"light\"\n                        ? \"dark\"\n                        : \"light\";\n                    document.body.classList.toggle(\"light\");\n                    document.body.classList.toggle(\"dark\");\n                    localStorage.setItem(\"theme\", nextTheme);\n                  }}\n                />\n                <label htmlFor=\"theme\"> </label>\n                <span className=\"on\">🌙</span>\n                <span className=\"off\">☀️</span>\n              </div>\n            </nav>\n            <Switch>\n              <Route\n                exact\n                path=\"/weather\"\n                component={props => <Weather {...props} weather={this.state} />}\n              />\n              <Route exact path=\"/\">\n                <ChoosePlace loadWeather={this.getWeather} />\n              </Route>\n            </Switch>\n          </div>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}